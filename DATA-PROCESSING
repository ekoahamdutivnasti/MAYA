import tensorflow as tf
import numpy as np
import os

# Directory containing text files
data_dir = 'path_to_your_text_files'

# Function to load and preprocess text data
def load_data(data_dir):
    text = ''
    for file_name in os.listdir(data_dir):
        with open(os.path.join(data_dir, file_name), 'r', encoding='utf-8') as file:
            text += file.read() + '\n'
    return text

text_data = load_data(data_dir)

# Tokenize the text data
tokenizer = tf.keras.preprocessing.text.Tokenizer()
tokenizer.fit_on_texts([text_data])
total_words = len(tokenizer.word_index) + 1

# Create sequences of tokens
input_sequences = []
for line in text_data.split('\n'):
    token_list = tokenizer.texts_to_sequences([line])[0]
    for i in range(1, len(token_list)):
        n_gram_sequence = token_list[:i+1]
        input_sequences.append(n_gram_sequence)

# Pad sequences and create input-output pairs
max_sequence_len = max([len(x) for x in input_sequences])
input_sequences = np.array(tf.keras.preprocessing.sequence.pad_sequences(input_sequences, maxlen=max_sequence_len, padding='pre'))
xs, labels = input_sequences[:,:-1],input_sequences[:,-1]

# One-hot encode the labels
ys = tf.keras.utils.to_categorical(labels, num_classes=total_words)
